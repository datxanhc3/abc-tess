#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Linq")]
	public partial class linqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_NCC(TBL_NCC instance);
    partial void UpdateTBL_NCC(TBL_NCC instance);
    partial void DeleteTBL_NCC(TBL_NCC instance);
    partial void InsertTBL_SANPAHM(TBL_SANPAHM instance);
    partial void UpdateTBL_SANPAHM(TBL_SANPAHM instance);
    partial void DeleteTBL_SANPAHM(TBL_SANPAHM instance);
    #endregion
		
		public linqDataContext() : 
				base(global::LinQ.Properties.Settings.Default.LinqConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_NCC> TBL_NCCs
		{
			get
			{
				return this.GetTable<TBL_NCC>();
			}
		}
		
		public System.Data.Linq.Table<TBL_SANPAHM> TBL_SANPAHMs
		{
			get
			{
				return this.GetTable<TBL_SANPAHM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_NCC")]
	public partial class TBL_NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mancc;
		
		private string _tenncc;
		
		private EntitySet<TBL_SANPAHM> _TBL_SANPAHMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmanccChanging(string value);
    partial void OnmanccChanged();
    partial void OntennccChanging(string value);
    partial void OntennccChanged();
    #endregion
		
		public TBL_NCC()
		{
			this._TBL_SANPAHMs = new EntitySet<TBL_SANPAHM>(new Action<TBL_SANPAHM>(this.attach_TBL_SANPAHMs), new Action<TBL_SANPAHM>(this.detach_TBL_SANPAHMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mancc", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mancc
		{
			get
			{
				return this._mancc;
			}
			set
			{
				if ((this._mancc != value))
				{
					this.OnmanccChanging(value);
					this.SendPropertyChanging();
					this._mancc = value;
					this.SendPropertyChanged("mancc");
					this.OnmanccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenncc", DbType="NVarChar(50)")]
		public string tenncc
		{
			get
			{
				return this._tenncc;
			}
			set
			{
				if ((this._tenncc != value))
				{
					this.OntennccChanging(value);
					this.SendPropertyChanging();
					this._tenncc = value;
					this.SendPropertyChanged("tenncc");
					this.OntennccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_NCC_TBL_SANPAHM", Storage="_TBL_SANPAHMs", ThisKey="mancc", OtherKey="mancc")]
		public EntitySet<TBL_SANPAHM> TBL_SANPAHMs
		{
			get
			{
				return this._TBL_SANPAHMs;
			}
			set
			{
				this._TBL_SANPAHMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_SANPAHMs(TBL_SANPAHM entity)
		{
			this.SendPropertyChanging();
			entity.TBL_NCC = this;
		}
		
		private void detach_TBL_SANPAHMs(TBL_SANPAHM entity)
		{
			this.SendPropertyChanging();
			entity.TBL_NCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_SANPAHM")]
	public partial class TBL_SANPAHM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mahang;
		
		private string _tenhang;
		
		private string _mancc;
		
		private System.Nullable<int> _soluong;
		
		private string _donhangnhap;
		
		private EntityRef<TBL_NCC> _TBL_NCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmahangChanging(string value);
    partial void OnmahangChanged();
    partial void OntenhangChanging(string value);
    partial void OntenhangChanged();
    partial void OnmanccChanging(string value);
    partial void OnmanccChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    partial void OndonhangnhapChanging(string value);
    partial void OndonhangnhapChanged();
    #endregion
		
		public TBL_SANPAHM()
		{
			this._TBL_NCC = default(EntityRef<TBL_NCC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahang", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahang
		{
			get
			{
				return this._mahang;
			}
			set
			{
				if ((this._mahang != value))
				{
					this.OnmahangChanging(value);
					this.SendPropertyChanging();
					this._mahang = value;
					this.SendPropertyChanged("mahang");
					this.OnmahangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenhang", DbType="NVarChar(20)")]
		public string tenhang
		{
			get
			{
				return this._tenhang;
			}
			set
			{
				if ((this._tenhang != value))
				{
					this.OntenhangChanging(value);
					this.SendPropertyChanging();
					this._tenhang = value;
					this.SendPropertyChanged("tenhang");
					this.OntenhangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mancc", DbType="NChar(10)")]
		public string mancc
		{
			get
			{
				return this._mancc;
			}
			set
			{
				if ((this._mancc != value))
				{
					if (this._TBL_NCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanccChanging(value);
					this.SendPropertyChanging();
					this._mancc = value;
					this.SendPropertyChanged("mancc");
					this.OnmanccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donhangnhap", DbType="NVarChar(50)")]
		public string donhangnhap
		{
			get
			{
				return this._donhangnhap;
			}
			set
			{
				if ((this._donhangnhap != value))
				{
					this.OndonhangnhapChanging(value);
					this.SendPropertyChanging();
					this._donhangnhap = value;
					this.SendPropertyChanged("donhangnhap");
					this.OndonhangnhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_NCC_TBL_SANPAHM", Storage="_TBL_NCC", ThisKey="mancc", OtherKey="mancc", IsForeignKey=true)]
		public TBL_NCC TBL_NCC
		{
			get
			{
				return this._TBL_NCC.Entity;
			}
			set
			{
				TBL_NCC previousValue = this._TBL_NCC.Entity;
				if (((previousValue != value) 
							|| (this._TBL_NCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_NCC.Entity = null;
						previousValue.TBL_SANPAHMs.Remove(this);
					}
					this._TBL_NCC.Entity = value;
					if ((value != null))
					{
						value.TBL_SANPAHMs.Add(this);
						this._mancc = value.mancc;
					}
					else
					{
						this._mancc = default(string);
					}
					this.SendPropertyChanged("TBL_NCC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
